#!/usr/bin/env ruby

require 'thor'
require 'awesome_print'
require 'inifile'
require 'yaml'

Warning[:deprecated] = false

CONFIG_FILE = ENV['SMB_CONFIG_FILE'] || "./smb.conf"

module Sambinha
  class CLI < Thor
    desc "start", "starts samba server with given configuration"
    long_desc <<-LONGDESC
      Starts samba server with given configuration

      --yml path to configuration file
    LONGDESC
    option :yml, required: true
    def start
      config = YAML.load File.read(options[:yml])
      config["users"].each { |username, password| create_user(username, password) }
      config["shares"].each { |name, params| create_sharing(name, params) }

      puts `service smbd start`
      puts `tail -f /var/log/samba/log.smbd`
    end

    no_commands do
      def create_user(username, password)
        puts `adduser --system #{username}`
        puts `usermod -aG samba #{username}`
        puts `(echo #{password} ; echo #{password}) | smbpasswd -a -s #{username}`
      end

      def create_sharing(name, params)
        config = IniFile.load CONFIG_FILE
        config[name] = config[name] || {}
        params.each do |k, v|
          config[name][k] = v
        end

        config.write unless options.empty?

        ap config[name]
      end
    end
  end
end

Sambinha::CLI.start ARGV
